Longest Common Prefix of Strings
Difficulty: EasyAccuracy: 29.52%Submissions: 268K+Points: 2
Given an array of strings arr. Return the longest common prefix among all strings present in the array. If there's no prefix common in all the strings, return "-1".

Examples :

Input: arr[] = ["geeksforgeeks", "geeks", "geek", "geezer"]
Output: gee
Explanation: "gee" is the longest common prefix in all the given strings.
Input: arr[] = ["hello", "world"]
Output: -1
Explanation: There's no common prefix in the given strings.
Expected Time Complexity: O(n*min(|arri|))
Expected Space Complexity: O(min(|arri|))

Constraints:
1 ≤ |arr| ≤ 103
1 ≤ |arr[i]| ≤ 103

class Solution:
    def longestCommonPrefix(self, arr):
        # Sort the array of strings
        arr.sort()
        
        # Get the first and last strings from the sorted array
        first = arr[0]
        last = arr[-1]
        
        # Initialize index to 0
        i = 0
        
        # Compare characters of first and last strings
        while i < len(first) and first[i] == last[i]:
            i += 1
        
        # Return the common prefix or -1 if no common prefix exists
        return first[:i] if i != 0 else -1

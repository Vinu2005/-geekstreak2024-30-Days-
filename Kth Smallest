Kth Smallest
Difficulty: MediumAccuracy: 35.17%Submissions: 616K+Points: 4
Given an array arr[] and an integer k where k is smaller than the size of the array, the task is to find the kth smallest element in the given array. It is given that all array elements are distinct.

Follow up: Don't solve it using the inbuilt sort function.

Examples :

Input: arr[] = [7, 10, 4, 3, 20, 15], k = 3
Output:  7
Explanation: 3rd smallest element in the given array is 7.
Input: arr[] = [7, 10, 4, 20, 15], k = 4 
Output:  15
Explanation: 4th smallest element in the given array is 15.
Expected Time Complexity: O(n+(max_element) )
Expected Auxiliary Space: O(max_element)
Constraints:
1 <= arr.size <= 10^6
1<= arr[i] <= 10^6
1 <= k <= n

class Solution:
    def partition(self, arr, low, high):
        pivot = arr[high]
        i = low - 1
        
        for j in range(low, high):
            if arr[j] <= pivot:
                i += 1
                arr[i], arr[j] = arr[j], arr[i]
        
        arr[i+1], arr[high] = arr[high], arr[i+1]
        return i + 1

    def quickSelect(self, arr, low, high, k):
        if low < high:
            pivot_index = self.partition(arr, low, high)
            
            if pivot_index == k:
                return arr[pivot_index]
            elif pivot_index > k:
                return self.quickSelect(arr, low, pivot_index - 1, k)
            else:
                return self.quickSelect(arr, pivot_index + 1, high, k)
        
        return arr[low]

    def kthSmallest(self, arr,k):
        return self.quickSelect(arr, 0, len(arr) - 1, k - 1)

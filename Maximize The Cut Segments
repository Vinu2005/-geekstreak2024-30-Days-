Maximize The Cut Segments
Difficulty: MediumAccuracy: 24.29%Submissions: 218K+Points: 4
Given an integer n denoting the Length of a line segment. You need to cut the line segment in such a way that the cut length of a line segment each time is either x , y or z. Here x, y, and z are integers.
After performing all the cut operations, your total number of cut segments must be maximum. Return the maximum number of cut segments possible.

Note: if no segment can be cut then return 0.

Examples:

Input: n = 4, x = 2, y = 1, z = 1
Output: 4
Explanation: Total length is 4, and the cut
lengths are 2, 1 and 1.  We can make
maximum 4 segments each of length 1.
Input: n = 5, x = 5, y = 3, z = 2
Output: 2
Explanation: Here total length is 5, and
the cut lengths are 5, 3 and 2. We can
make two segments of lengths 3 and 2.
Expected Time Complexity : O(n)
Expected Auxiliary Space: O(n)

Constraints
1 <= n, x, y, z <= 104

# Initialize dp array with -inf (representing no cuts possible)
        dp = [-float('inf')] * (n + 1)
        
        # Base case: if the length is 0, we don't need any cuts.
        dp[0] = 0
        
        # Iterate over each length from 1 to n
        for i in range(1, n + 1):
            # Check if a cut of length x can be made
            if i >= x:
                dp[i] = max(dp[i], dp[i - x] + 1)
            # Check if a cut of length y can be made
            if i >= y:
                dp[i] = max(dp[i], dp[i - y] + 1)
            # Check if a cut of length z can be made
            if i >= z:
                dp[i] = max(dp[i], dp[i - z] + 1)
        
        # If dp[n] is still -inf, return 0 (no cuts possible)
        return max(0, dp[n])

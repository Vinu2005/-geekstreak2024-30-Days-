Job Sequencing Problem
Difficulty: MediumAccuracy: 34.51%Submissions: 237K+Points: 4
Given a set of n jobs where each jobi has a deadline and profit associated with it.

Each job takes 1 unit of time to complete and only one job can be scheduled at a time. We earn the profit associated with a job if and only if the job is completed by its deadline.

Find the number of jobs done and the maximum profit.

Note: Jobs will be given in the form (Jobid, Deadline, Profit) associated with that Job. Deadline of the job is the time on or before which job needs to be completed to earn the profit.

Examples :

Input: Jobs = [[1,4,20],[2,1,1],[3,1,40],[4,1,30]]
Output: 2 60
Explanation: Job1 and Job3 can be done with maximum profit of 60 (20+40).
Input: Jobs = [[1,2,100],[2,1,19],[3,2,27],[4,1,25],[5,1,15]]
Output: 2 127
Explanation: 2 jobs can be done with maximum profit of 127 (100+27).
Expected Time Complexity: O(nlogn)
Expected Auxilliary Space: O(n)

Constraints:
1 <= n <= 105
1 <= Deadline,id <= n
1 <= Profit <= 500

'''
class Job:
    
    # Job class which stores profit and deadline.
    
    def __init__(self,profit=0,deadline=0):
        self.profit = profit
        self.deadline = deadline
        self.id = 0
'''        

class Solution:
    
    #Function to find the maximum profit and the number of jobs done.
    def JobScheduling(self,Jobs,n):
        # Step 1: Sort jobs by descending order of profit
        Jobs.sort(key=lambda x: x.profit, reverse=True)
        
        # Step 2: Find the maximum deadline
        max_deadline = max(job.deadline for job in Jobs)
        
        # Step 3: Initialize a slot array to track free time slots
        slot = [-1] * (max_deadline + 1)
        
        # Variables to store the number of jobs done and total profit
        count_jobs = 0
        total_profit = 0
        
        # Step 4: Iterate over each job
        for job in Jobs:
            # Find a free slot for this job (start from its deadline)
            for j in range(min(max_deadline, job.deadline), 0, -1):
                if slot[j] == -1:
                    # If a free slot is found, schedule the job
                    slot[j] = job.id
                    count_jobs += 1
                    total_profit += job.profit
                    break
        
        # Step 5: Return the number of jobs done and the total profit
        return count_jobs, total_profit


The Celebrity Problem
Difficulty: MediumAccuracy: 38.33%Submissions: 256K+Points: 4
A celebrity is a person who is known to all but does not know anyone at a party. A party is being organized by some people.  A square matrix mat is used to represent people at the party such that if an element of row i and column j is set to 1 it means ith person knows jth person. You need to return the index of the celebrity in the party, if the celebrity does not exist, return -1.

Note: Follow 0-based indexing.

Examples:

Input: mat[][] = [[0 1 0],
                [0 0 0], 
                [0 1 0]]
Output: 1
Explanation: 0th and 2nd person both know 1. Therefore, 1 is the celebrity. 
Input: mat[][] = [[0 1],
                [1 0]]
Output: -1
Explanation: The two people at the party both know each other. None of them is a celebrity.
Expected Time Complexity: O(n2)
Expected Auxiliary Space: O(1)

Constraints:
1 <= mat.size()<= 3000
0 <= mat[i][j]<= 1
class Solution:
    def celebrity(self, mat):
        n = len(mat)
        a = 0
        b = n - 1
        
        # Find the potential celebrity
        while a < b:
            if mat[a][b] == 1:
                # a knows b, so a can't be a celebrity
                a += 1
            else:
                # a doesn't know b, so b can't be a celebrity
                b -= 1
        
        # a is the potential celebrity
        candidate = a
        
        # Verify if candidate is really a celebrity
        for i in range(n):
            if i != candidate:
                if mat[candidate][i] == 1 or mat[i][candidate] == 0:
                    return -1
        
        return candidate

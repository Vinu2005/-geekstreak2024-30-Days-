N meetings in one room
Difficulty: EasyAccuracy: 45.3%Submissions: 254K+Points: 2
You are given timings of n meetings in the form of (start[i], end[i]) where start[i] is the start time of meeting i and end[i] is the finish time of meeting i. Return the maximum number of meetings that can be accommodated in a single meeting room, when only one meeting can be held in the meeting room at a particular time. 

Note: The start time of one chosen meeting can't be equal to the end time of the other chosen meeting.

Examples :

Input: n = 6, start[] = [1, 3, 0, 5, 8, 5], end[] =  [2, 4, 6, 7, 9, 9]
Output: 4
Explanation: Maximum four meetings can be held with given start and end timings. The meetings are - (1, 2), (3, 4), (5,7) and (8,9)
Input: n = 3, start[] = [10, 12, 20], end[] = [20, 25, 30]
Output: 1
Explanation: Only one meetings can be held with given start and end timings.
Expected Time Complexity: O(n*logn)
Expected Auxilliary Space: O(n)

Constraints:
1 ≤ n ≤ 105
0 ≤ start[i] < end[i] ≤ 106

class Solution:
    
    #Function to find the maximum number of meetings that can
    #be performed in a meeting room.
    def maximumMeetings(self,n,start,end):
        # Creating a list of tuples (end, start) and sorting it based on end times.
        meetings = [(end[i], start[i]) for i in range(n)]
        meetings.sort()

        # Initializing the count of meetings.
        count = 0
        # The end time of the last selected meeting.
        last_end_time = -1

        # Iterating through the sorted meetings.
        for end_time, start_time in meetings:
            # If the start time of the current meeting is greater than
            # the end time of the last selected meeting, select this meeting.
            if start_time > last_end_time:
                count += 1
                last_end_time = end_time

        return count

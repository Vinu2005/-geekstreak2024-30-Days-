Product array puzzle
Difficulty: EasyAccuracy: 33.46%Submissions: 213K+Points: 2
Given an array nums[], construct a Product Array nums[] such that nums[i] is equal to the product of all the elements of nums except nums[i].

Examples:

Input: nums[] = [10, 3, 5, 6, 2]
Output: [180, 600, 360, 300, 900]
Explanation: For i=0, P[i] = 3*5*6*2 = 180.
For i=1, P[i] = 10*5*6*2 = 600.
For i=2, P[i] = 10*3*6*2 = 360.
For i=3, P[i] = 10*3*5*2 = 300.
For i=4, P[i] = 10*3*5*6 = 900.
Input: nums[] = [12,0]
Output: [0, 12]
Expected Time Complexity: O(n)
Expected Auxiliary Space: O(n)

Constraints:
1 <= nums.size() <= 1000
0 <= nums[i] <= 200
nums[i] may contain duplicates.

class Solution:
    def productExceptSelf(self, nums):
        n = len(nums)
        # Initialize arrays for left and right products and the result
        left = [1] * n
        right = [1] * n
        result = [1] * n
        
        # Fill left array with prefix products
        for i in range(1, n):
            left[i] = left[i - 1] * nums[i - 1]
        
        # Fill right array with suffix products
        for i in range(n - 2, -1, -1):
            right[i] = right[i + 1] * nums[i + 1]
        
        # Build the result array
        for i in range(n):
            result[i] = left[i] * right[i]
        
        return result
